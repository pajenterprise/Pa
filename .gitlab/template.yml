
# Kitchen images list, kept up-to-date, that can be used by any pipeline that needs it
variables:
  kitchen_win2008r2: "win2008r2,id,/subscriptions/8c56d827-5f07-45ce-8f2b-6c5001db5c6f/resourceGroups/kitchen-test-images/providers/Microsoft.Compute/galleries/kitchenimages/images/Windows2008-R2-SP1/versions/1.0.0"
  kitchen_win2012: "win2012,urn,MicrosoftWindowsServer:WindowsServer:2012-Datacenter:3.127.20190410"
  kitchen_win2012r2: "win2012r2,urn,MicrosoftWindowsServer:WindowsServer:2012-R2-Datacenter:4.127.20190416"
  kitchen_win2016: "win2016,urn,MicrosoftWindowsServer:WindowsServer:2016-Datacenter-Server-Core:2016.127.20190416"
  kitchen_win2019: "win2019,urn,MicrosoftWindowsServer:WindowsServer:2019-Datacenter-Core:2019.0.20190410"
  kitchen_centos69: "centos-69,urn,OpenLogic:CentOS:6.9:6.9.20180530"
  kitchen_centos77: "centos-77,urn,OpenLogic:CentOS:7.7:7.7.201912090"
  kitchen_rhel82: "rhel-82,urn,RedHat:RHEL:8.2:8.2.2020050811"
  kitchen_sles12: "sles-12,urn,SUSE:SLES-BYOS:12-SP4:2019.11.13"
  kitchen_sles15: "sles-15,urn,SUSE:SLES-BYOS:15:2019.11.15"
  kitchen_debian8: "debian-8,urn,credativ:Debian:8:8.20190313.0"
  kitchen_debian9: "debian-9,urn,credativ:Debian:9:9.20190515.0"
  kitchen_debian10: "debian-10,urn,Debian:debian-10:10:0.20190709.401"
  kitchen_ubuntu1404: "ubuntu-14-04,urn,Canonical:UbuntuServer:14.04.5-LTS:14.04.201905140"
  kitchen_ubuntu1604: "ubuntu-16-04,urn,Canonical:UbuntuServer:16.04.0-LTS:16.04.201906170"
  kitchen_ubuntu1804: "ubuntu-18-04,urn,Canonical:UbuntuServer:18.04-LTS:18.04.201906040"
  kitchen_ubuntu2004: "ubuntu-20-04,urn,Canonical:0001-com-ubuntu-server-focal:20_04-lts:20.04.202004230"


# deploy debian packages to apt staging repo
.deploy_staging_deb:
  resource_group: deb_bucket
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - ls $OMNIBUS_PACKAGE_DIR
    # We first check that the current version hasn't already been deployed
    # (same as the check_already_deployed_version). We do this twice to mitigate
    # races and issues with retries while failing early if there is an issue.
    - pushd $OMNIBUS_PACKAGE_DIR
    - ~/deploy_scripts/fail_deb_is_pkg_already_exists.sh *_${AGENT_MAJOR_VERSION}.*amd64.deb
    - popd

    - set +x # make sure we don't output the creds to the build log

    - APT_SIGNING_KEY_ID=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_key_id --with-decryption --query "Parameter.Value" --out text)
    - APT_SIGNING_PRIVATE_KEY_PART1=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_private_key_part1 --with-decryption --query "Parameter.Value" --out text)
    - APT_SIGNING_PRIVATE_KEY_PART2=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_private_key_part2 --with-decryption --query "Parameter.Value" --out text)
    - APT_SIGNING_KEY_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.apt_signing_key_passphrase --with-decryption --query "Parameter.Value" --out text)

    - echo "$APT_SIGNING_KEY_ID"
    - printf -- "$APT_SIGNING_PRIVATE_KEY_PART1\n$APT_SIGNING_PRIVATE_KEY_PART2\n" | gpg --import --batch

    # Release the artifacts
    - |
      for arch in $ARCHS; do
        echo "Deploying Agent $AGENT_MAJOR_VERSION, arch $arch"
        echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c $DEB_RPM_BUCKET_BRANCH -m $AGENT_MAJOR_VERSION -b $DEB_S3_BUCKET -a ${arch} --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd 0 --batch --digest-algo SHA512" --preserve_versions --visibility public $OMNIBUS_PACKAGE_DIR/*_${AGENT_MAJOR_VERSION}.*${arch}.deb
        if [[ "$arch" -eq "amd64" ]]; then
          echo "Deploying Agent $AGENT_MAJOR_VERSION, arch x86_64"
          echo "$APT_SIGNING_KEY_PASSPHRASE" | deb-s3 upload -c $DEB_RPM_BUCKET_BRANCH -m $AGENT_MAJOR_VERSION -b $DEB_S3_BUCKET -a x86_64 --sign=$APT_SIGNING_KEY_ID --gpg_options="--passphrase-fd 0 --batch --digest-algo SHA512" --preserve_versions --visibility public $OMNIBUS_PACKAGE_DIR/*_${AGENT_MAJOR_VERSION}.*amd64.deb
        fi
      done

.deploy_staging_rpm:
  resource_group: rpm_bucket
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - ls $OMNIBUS_PACKAGE_DIR
    - |
      for arch in $ARCHS; do
        echo "Deploying Agent $AGENT_MAJOR_VERSION, arch $arch"
        rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_S3_BUCKET -p "$DEB_RPM_BUCKET_BRANCH/$AGENT_MAJOR_VERSION/$arch/" $OMNIBUS_PACKAGE_DIR/*-${AGENT_MAJOR_VERSION}.*${arch}.rpm
      done

.deploy_staging_suse_rpm:
  resource_group: suse_bucket
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - ls $OMNIBUS_PACKAGE_DIR_SUSE
    - |
      for arch in $ARCHS; do
        echo "Deploying Agent $AGENT_MAJOR_VERSION, arch $arch"
        rpm-s3 --verbose --visibility public-read -c "https://s3.amazonaws.com" -b $RPM_S3_BUCKET -p "suse/$DEB_RPM_BUCKET_BRANCH/$AGENT_MAJOR_VERSION/$arch/" $OMNIBUS_PACKAGE_DIR_SUSE/*-${MAJOR_VERSION}.*${arch}.rpm
      done

# deploy dsd binary to staging bucket
.deploy_staging_dsd:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - $S3_CP_CMD $S3_ARTIFACTS_URI/dogstatsd/dogstatsd ./dogstatsd
    - export PACKAGE_VERSION=$(inv agent.version --url-safe --major-version $MAJOR_VERSION)
    - $S3_CP_CMD ./dogstatsd $S3_DSD6_URI/linux/dogstatsd-$PACKAGE_VERSION --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

# deploy iot-agent binary to staging bucket
.deploy_staging_iot_agent:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - $S3_CP_CMD $S3_ARTIFACTS_URI/iot/agent ./agent
    - export PACKAGE_VERSION=$(inv agent.version --url-safe --major-version $MAJOR_VERSION)
    - $S3_CP_CMD ./agent $S3_DSD6_URI/linux/iot/agent-$PACKAGE_VERSION --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

.deploy_staging_windows:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - ls $OMNIBUS_PACKAGE_DIR
    - $S3_CP_CMD --recursive --exclude "*" --include "datadog-*-${AGENT_MAJOR_VERSION}*.msi" $OMNIBUS_PACKAGE_DIR s3://$WINDOWS_BUILDS_S3_BUCKET/$DESTINATION/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

.deploy_staging_windows_latest:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - ls $OMNIBUS_PACKAGE_DIR
    - if [ "WINDOWS_DO_NOT_UPDATE_LATEST" != "true" ]; then $S3_CP_CMD $OMNIBUS_PACKAGE_DIR/datadog-agent-${AGENT_MAJOR_VERSION}*-x86_64.msi "s3://$WINDOWS_BUILDS_S3_BUCKET/$DESTINATION/datadog-agent-${AGENT_MAJOR_VERSION}-latest.amd64.msi" --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732; fi

# deploy agent windows zip to the staging bucket, currently used for cloudfoundry bosh
.deploy_staging_datadog_agent_windows_zip:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - ls $OMNIBUS_PACKAGE_DIR
    - $S3_CP_CMD --recursive --exclude "*" --include "datadog-agent-7.*.zip" $OMNIBUS_PACKAGE_DIR $S3_DSD6_URI/windows/agent7/bosh/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

.deploy_cluster_agent_cloudfoundry:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - ls $OMNIBUS_PACKAGE_DIR
    - $S3_CP_CMD --recursive --exclude "*" --include "datadog-cluster-agent-cloudfoundry-*.tar.xz" $OMNIBUS_PACKAGE_DIR $S3_DSD6_URI/linux/cluster-agent-cloudfoundry/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

# deploy datadog agent windows binaries to staging bucket. Currently used for cloudfoundry builpack
.deploy_staging_datadog_agent_windows_binaries_zip:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - ls $OMNIBUS_PACKAGE_DIR
    - $S3_CP_CMD --recursive --exclude "*" --include "agent-binaries-7.*.zip" $OMNIBUS_PACKAGE_DIR $S3_DSD6_URI/windows/agent7/buildpack/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

# deploy process agent and system-probe to staging bucket
.deploy_staging_process_and_sysprobe:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/gitlab_agent_deploy:$DATADOG_AGENT_BUILDERS
  tags: [ "runner:main", "size:large" ]
  script:
    - cd $OMNIBUS_PACKAGE_DIR
    - ls
    # The shell expansion `datadog-agent_*_amd64.deb` might return multiple
    # entries, so we sort them and get the first one.
    - dpkg -x $(ls -1 datadog-agent_*_amd64.deb | sort -V | head -n 1) ./out
    # Use tag or shortened branch with short commit hash to identify the binary
    - export SHORT_REF=$(echo $CI_COMMIT_REF_NAME | cut -d'/' -f2- | cut -c -10 | sed -E 's/[^[:alnum:]]+/-/g')
    - export NAME="${CI_COMMIT_TAG:-$SHORT_REF}-${CI_COMMIT_SHA:0:7}"
    - echo "Uploading with name=$NAME"
    - $S3_CP_CMD ./out/opt/datadog-agent/embedded/bin/process-agent s3://$PROCESS_S3_BUCKET/process-agent-amd64-$NAME --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=612548d92af7fa77f7ad7bcab230494f7310438ac6332e904a8fb2e6daa5cb23
    - $S3_CP_CMD ./out/opt/datadog-agent/embedded/bin/system-probe s3://$PROCESS_S3_BUCKET/system-probe-amd64-$NAME --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=612548d92af7fa77f7ad7bcab230494f7310438ac6332e904a8fb2e6daa5cb23

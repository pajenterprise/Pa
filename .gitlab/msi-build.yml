include:
  - '/.gitlab/utils/main.yml'
  - '/.gitlab/utils/kitchen.yml'

stages:
  - source_tests
  - package_build
  - testkitchen_deploy
  - testkitchen_test

#
# Source tests
#

# Tests on the old Windows builders
# We can't run --race tests on new builders until we upgrade go to 1.14, so
# we need to keep the old tests until then.
.run_old_tests_windows_base:
  stage: source_tests
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  script:
    - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e IS_AWS_CONTAINER=true -e SIGN_WINDOWS=true -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e NEW_BUILDER="$NEW_BUILDER" 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDERS} c:\mnt\tasks\winbuildscripts\unittests.bat
  variables:
    NEW_BUILDER: "false"

run_old_tests_windows-x64:
  extends: .run_old_tests_windows_base
  allow_failure: true
  variables:
    PYTHON_RUNTIMES: 3
    ARCH: "x64"

run_old_tests_windows-x86:
  extends:
    - .run_old_tests_windows_base
    - .skip_when_triggered
  allow_failure: true
  variables:
    PYTHON_RUNTIMES: 3
    ARCH: "x86"

# Tests on the new Windows builders
.run_tests_windows_base:
  stage: source_tests
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  script:
    - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e AWS_NETWORKING=true -e SIGN_WINDOWS=true -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e NEW_BUILDER="$NEW_BUILDER" 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:$Env:DATADOG_AGENT_WINBUILDIMAGES c:\mnt\tasks\winbuildscripts\unittests.bat
  variables:
    NEW_BUILDER: "true"

run_tests_windows-x64:
  # temporarily allow failure for tests
  extends: .run_tests_windows_base
  allow_failure: true
  variables:
    PYTHON_RUNTIMES: 3
    ARCH: "x64"

run_tests_windows-x86:
  # temporarily allow failure for tests
  extends:
    - .run_tests_windows_base
    - .skip_when_triggered
  allow_failure: true
  variables:
    PYTHON_RUNTIMES: 3
    ARCH: "x86"

#
# Package build
#

# Windows msi builds using the old builders
# Only kept here for comparison, will be removed soon
.windows_old_msi_base:
  extends: .skip_when_triggered
  stage: package_build
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  script:
    - if (Test-Path .omnibus) { remove-item -recurse -force .omnibus }
    - if (Test-Path build-out) { remove-item -recurse -force build-out }
    - mkdir .omnibus\pkg
    - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e CI_JOB_ID=${CI_JOB_ID} -e OMNIBUS_TARGET=${OMNIBUS_TARGET} -e WINDOWS_BUILDER=true -e RELEASE_VERSION="$RELEASE_VERSION" -e MAJOR_VERSION="$AGENT_MAJOR_VERSION" -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e IS_AWS_CONTAINER=true -e SIGN_WINDOWS=true -e TARGET_ARCH="$ARCH" -e NEW_BUILDER=false 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDERS} c:\mnt\tasks\winbuildscripts\oldbuildwin.bat
    - copy build-out\${CI_JOB_ID}\*.msi .omnibus\pkg
    - if (Test-Path build-out\${CI_JOB_ID}\*.zip) { copy build-out\${CI_JOB_ID}\*.zip .omnibus\pkg }
    - remove-item -recurse -force build-out\${CI_JOB_ID}
    - get-childitem build-out
    - get-childitem .omnibus\pkg
  artifacts:
    expire_in: 2 weeks
    paths:
      - .omnibus/pkg
  allow_failure: true

.windows_old_main_agent_base:
  extends: .windows_old_msi_base
  variables:
    OMNIBUS_TARGET: main

# Windows msi builds using the new builders
.windows_msi_base:
  stage: package_build
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  script:
    - if (Test-Path .omnibus) { remove-item -recurse -force .omnibus }
    - if (Test-Path build-out) { remove-item -recurse -force build-out }
    - mkdir .omnibus\pkg
    - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e CI_JOB_ID=${CI_JOB_ID} -e OMNIBUS_TARGET=${OMNIBUS_TARGET} -e WINDOWS_BUILDER=true -e RELEASE_VERSION="$RELEASE_VERSION" -e MAJOR_VERSION="$AGENT_MAJOR_VERSION" -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e AWS_NETWORKING=true -e SIGN_WINDOWS=true -e TARGET_ARCH="$ARCH" -e NEW_BUILDER=true 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDIMAGES} c:\mnt\tasks\winbuildscripts\buildwin.bat
    - copy build-out\${CI_JOB_ID}\*.msi .omnibus\pkg
    - if (Test-Path build-out\${CI_JOB_ID}\*.zip) { copy build-out\${CI_JOB_ID}\*.zip .omnibus\pkg }
    - remove-item -recurse -force build-out\${CI_JOB_ID}
    - get-childitem build-out
    - get-childitem .omnibus\pkg
  artifacts:
    expire_in: 2 weeks
    paths:
      - .omnibus/pkg

.windows_main_agent_base:
  extends: .windows_msi_base
  variables:
    OMNIBUS_TARGET: main

.windows_build-a6:
  extends: .skip_when_unwanted_on_6
  variables:
    AGENT_MAJOR_VERSION: 6
    PYTHON_RUNTIMES: '2,3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_6

.windows_build-a7:
  extends: .skip_when_unwanted_on_7
  variables:
    AGENT_MAJOR_VERSION: 7
    PYTHON_RUNTIMES: '3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_7

windows_old_msi_x64-a7:
  extends:
    - .windows_old_main_agent_base
    - .windows_build-a7
  variables:
    ARCH: "x64"
    
windows_old_msi_x64-a6:
  extends:
    - .windows_old_main_agent_base
    - .windows_build-a6
  variables:
    ARCH: "x64"
    AGENT_MAJOR_VERSION: 6
    PYTHON_RUNTIMES: '2,3'
  before_script:
    - set RELEASE_VERSION $RELEASE_VERSION_6

windows_msi_x64-a7:
  extends:
    - .windows_main_agent_base
    - .windows_build-a7
  variables:
    ARCH: "x64"

windows_msi_x86-a7:
  extends:
    - .windows_main_agent_base
    - .windows_build-a7
  allow_failure: true
  variables:
    ARCH: "x86"

windows_msi_x64-a6:
  extends:
    - .windows_main_agent_base
    - .windows_build-a6
  variables:
    ARCH: "x64"

windows_msi_x86-a6:
  extends:
    - .windows_main_agent_base
    - .windows_build-a6
  allow_failure: true
  variables:
    ARCH: "x86"

windows_dsd_msi_x64-a7:
  extends:
    - .windows_msi_base
    - .windows_build-a7
  variables:
    ARCH: "x64"
    PYTHON_RUNTIMES: ""
    OMNIBUS_TARGET: dogstatsd

# cloudfoundry iot build/windows
windows_zip_agent_binaries_x64-a7:
  extends:
    - .windows_build-a7
  stage: package_build
  tags: ["runner:windows-docker", "windowsversion:1809"]
  variables:
    ARCH: "x64"
    PYTHON_RUNTIMES: ""
    OMNIBUS_TARGET: agent_binaries
  script:
    - if (Test-Path .omnibus) { remove-item -recurse -force .omnibus }
    - if (Test-Path build-out) { remove-item -recurse -force build-out }
    - mkdir .omnibus\pkg
    - docker run --rm -m 4096M -v "$(Get-Location):c:\mnt" -e OMNIBUS_TARGET=${OMNIBUS_TARGET} -e WINDOWS_BUILDER=true -e RELEASE_VERSION="$RELEASE_VERSION" -e MAJOR_VERSION="$AGENT_MAJOR_VERSION" -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e AWS_NETWORKING=true -e SIGN_WINDOWS=true 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:${Env:DATADOG_AGENT_WINBUILDIMAGES} c:\mnt\tasks\winbuildscripts\buildwin.bat
    - copy build-out\*.zip .omnibus\pkg
  artifacts:
    expire_in: 2 weeks
    paths:
      - .omnibus/pkg

#
# Deploy artifacts to test bucket for kitchen tests
#

deploy_windows_testing-a6:
  extends:
    - .run_only_when_testkitchen_triggered
    - .skip_when_unwanted_on_6
  stage: testkitchen_deploy
  needs: [ "windows_msi_x64-a6" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  before_script:
    - ls $OMNIBUS_PACKAGE_DIR
  tags: [ "runner:main", "size:large" ]
  script:
    - $S3_CP_CMD --recursive --exclude "*" --include "datadog-agent-6.*.msi" $OMNIBUS_PACKAGE_DIR s3://$WIN_S3_BUCKET/$WINDOWS_TESTING_S3_BUCKET_A6 --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

deploy_windows_testing-a7:
  extends:
    - .run_only_when_testkitchen_triggered
    - .skip_when_unwanted_on_7
  stage: testkitchen_deploy
  needs: [ "windows_msi_x64-a7" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-builders/deploy:$DATADOG_AGENT_BUILDERS
  before_script:
    - ls $OMNIBUS_PACKAGE_DIR
  tags: [ "runner:main", "size:large" ]
  script:
    - $S3_CP_CMD --recursive --exclude "*" --include "datadog-agent-7.*.msi" $OMNIBUS_PACKAGE_DIR s3://$WIN_S3_BUCKET/$WINDOWS_TESTING_S3_BUCKET_A7 --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=3a6e02b08553fd157ae3fb918945dd1eaae5a1aa818940381ef07a430cf25732

#
# Kitchen tests
#

# Kitchen: OSes
# -------------

.kitchen_os_windows:
  before_script: # Note: if you are changing this, remember to also change .kitchen_test_windows_installer, which has a copy of this with less TEST_PLATFORMS defined.
    - if [ $AGENT_MAJOR_VERSION == "7" ]; then export WINDOWS_TESTING_S3_BUCKET=$WINDOWS_TESTING_S3_BUCKET_A7; else export WINDOWS_TESTING_S3_BUCKET=$WINDOWS_TESTING_S3_BUCKET_A6; fi
    - rsync -azr --delete ./ $SRC_PATH
    - export TEST_PLATFORMS="win2008r2,id,/subscriptions/8c56d827-5f07-45ce-8f2b-6c5001db5c6f/resourceGroups/kitchen-test-images/providers/Microsoft.Compute/galleries/kitchenimages/images/Windows2008-R2-SP1/versions/1.0.0"
    - export TEST_PLATFORMS="$TEST_PLATFORMS|win2012,urn,MicrosoftWindowsServer:WindowsServer:2012-Datacenter:3.127.20190410"
    - export TEST_PLATFORMS="$TEST_PLATFORMS|win2012r2,urn,MicrosoftWindowsServer:WindowsServer:2012-R2-Datacenter:4.127.20190416"
    - export TEST_PLATFORMS="$TEST_PLATFORMS|win2016,urn,MicrosoftWindowsServer:WindowsServer:2016-Datacenter-Server-Core:2016.127.20190603"
    - export TEST_PLATFORMS="$TEST_PLATFORMS|win2019,urn,MicrosoftWindowsServer:WindowsServer:2019-Datacenter-Core:2019.0.20190603"
    - cd $DD_AGENT_TESTING_DIR
    - bash -l tasks/kitchen_setup.sh

# Kitchen: scenarios (os * agent)
# -------------------------------

.kitchen_scenario_windows_a6:
  stage: testkitchen_test
  extends:
    - .kitchen_os_windows
    - .kitchen_agent_a6
  needs: [ "deploy_windows_testing-a6" ]

.kitchen_scenario_windows_a7:
  stage: testkitchen_test
  extends:
    - .kitchen_os_windows
    - .kitchen_agent_a7
  needs: [ "deploy_windows_testing-a7" ]

# Kitchen: final test matrix (tests * scenarios)
# ----------------------------------------------

kitchen_windows_installer-a6:
  allow_failure: true
  extends:
    - .kitchen_scenario_windows_a6
    - .kitchen_test_windows_installer
  retry: 0

kitchen_windows_installer-a7:
  allow_failure: true
  extends:
    - .kitchen_scenario_windows_a7
    - .kitchen_test_windows_installer
  retry: 0

kitchen_windows_chef-a6:
  allow_failure: false
  extends:
    - .kitchen_scenario_windows_a6
    - .kitchen_test_chef

kitchen_windows_chef-a7:
  allow_failure: false
  extends:
    - .kitchen_scenario_windows_a7
    - .kitchen_test_chef

kitchen_windows_upgrade5-a6:
  allow_failure: false
  extends:
    - .kitchen_scenario_windows_a6
    - .kitchen_test_upgrade5

kitchen_windows_upgrade5-a7:
  allow_failure: false
  extends:
    - .kitchen_scenario_windows_a7
    - .kitchen_test_upgrade5

kitchen_windows_upgrade6-a6:
  allow_failure: false
  extends:
    - .kitchen_scenario_windows_a6
    - .kitchen_test_upgrade6

kitchen_windows_upgrade6-a7:
  allow_failure: false
  extends:
    - .kitchen_scenario_windows_a7
    - .kitchen_test_upgrade6

kitchen_windows_upgrade7-a7:
  allow_failure: false
  extends:
    - .kitchen_scenario_windows_a7
    - .kitchen_test_upgrade7
